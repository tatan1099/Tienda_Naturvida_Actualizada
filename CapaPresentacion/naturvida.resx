<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        lChR4gWjUvk/4aSsBuW7ug4AAAAASUVORK5CYII=
</value>
  </data>
</root>